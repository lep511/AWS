AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: 'Create a DynamoDB table and two Lambda functions that can read and write to it.'
Parameters:
  DynamoDBTableName:
    Type: String
    Description: The name of the DynamoDB table
    Default: SuperMissionTable
Resources:
  DynamoDBTable:
    Type: 'AWS::Serverless::SimpleTable'
    Properties:
      TableName: !Ref DynamoDBTableName
      PrimaryKey:
        Name: 'SuperHero'
        Type: 'String'
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
  MissionDetailsFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: get_superhero/lambda_function.lambda_handler
      Runtime: python3.9
      CodeUri: .
      MemorySize: 128
      Timeout: 90
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref DynamoDBTable
      Events:
        GetMission:
          Type: Api
          Properties:
            Path: /mission/{SuperHero}
            Method: get
  GetMissionFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: all_missions/lambda_function.lambda_handler
      Runtime: python3.9
      CodeUri: .
      MemorySize: 128
      Timeout: 90
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref DynamoDBTable
        - DynamoDBWritePolicy:
            TableName: !Ref DynamoDBTable
      Events:
        GetMission:
          Type: Api
          Properties:
            Path: /allmission/
            Method: get

Outputs:
  WebEndpoint:
    Description: "API Gateway endpoint URL for Prod stage"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"