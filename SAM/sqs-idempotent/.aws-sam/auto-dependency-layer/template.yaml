AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Using an Amazon SQS queue as an idempotent queue to ensure that a message
  is processed only once.
Resources:
  DynamoDBTableProcessedRecords:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName:
        Fn::Sub: ${AWS::StackName}-DynamoDBTableProcessedRecords
      AttributeDefinitions:
      - AttributeName: Records
        AttributeType: S
      KeySchema:
      - AttributeName: Records
        KeyType: HASH
      BillingMode: PAY_PER_REQUEST
  DynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName:
        Fn::Sub: ${AWS::StackName}-DynamoDBTable
      AttributeDefinitions:
      - AttributeName: id
        AttributeType: S
      KeySchema:
      - AttributeName: id
        KeyType: HASH
      BillingMode: PAY_PER_REQUEST
  MyQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName:
        Fn::Sub: ${AWS::StackName}-MyQueue
      VisibilityTimeout: 150
      ReceiveMessageWaitTimeSeconds: 5
      RedrivePolicy:
        deadLetterTargetArn:
          Fn::GetAtt:
          - DeadLetterQueue
          - Arn
        maxReceiveCount: 3
  DeadLetterQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName:
        Fn::Sub: ${AWS::StackName}-DeadLetterQueue
  MyFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName:
        Fn::Sub: ${AWS::StackName}-MyFunction
      CodeUri: MyFunction
      Handler: lambda_function.lambda_handler
      Runtime: python3.9
      Timeout: 30
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: DynamoDBTable
      - DynamoDBCrudPolicy:
          TableName:
            Ref: DynamoDBTableProcessedRecords
      - SQSSendMessagePolicy:
          QueueName:
            Fn::Sub: https://sqs.${AWS::Region}.amazonaws.com/${AWS::AccountId}/${AWS::StackName}-DeadLetterQueue
      Events:
        MyQueue:
          Type: SQS
          Properties:
            Queue:
              Fn::GetAtt:
              - MyQueue
              - Arn
            BatchSize: 20
            MaximumBatchingWindowInSeconds: 5
      Environment:
        Variables:
          DYNAMODB_TABLE:
            Ref: DynamoDBTable
          PROCESSED_RECORDS:
            Ref: DynamoDBTableProcessedRecords
          SQS_QUEUE_URL:
            Fn::Sub: https://sqs.${AWS::Region}.amazonaws.com/${AWS::AccountId}/${AWS::StackName}-MyQueue
          SQS_QUEUE_ARN:
            Fn::Sub: arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:${AWS::StackName}-MyQueue
          DLQ_ARN:
            Fn::Sub: arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:${AWS::StackName}-DeadLetterQueue
      Layers:
      - Fn::GetAtt:
        - AwsSamAutoDependencyLayerNestedStack
        - Outputs.MyFunctionbf3066d1DepLayer
    Metadata:
      SamResourceId: MyFunction
  AwsSamAutoDependencyLayerNestedStack:
    DeletionPolicy: Delete
    Metadata:
      CreatedBy: AWS SAM CLI sync command
    Properties:
      TemplateURL: /home/lep511/agit/AWS/SAM/sqs-idempotent/.aws-sam/auto-dependency-layer/adl_nested_template.yaml
    Type: AWS::CloudFormation::Stack
Outputs:
  MyQueueUrl:
    Description: My Queue URL
    Value:
      Fn::Sub: https://sqs.${AWS::Region}.amazonaws.com/${AWS::AccountId}/${AWS::StackName}-MyQueue
  MyFunctionArn:
    Description: My Function ARN
    Value:
      Fn::GetAtt:
      - MyFunction
      - Arn
