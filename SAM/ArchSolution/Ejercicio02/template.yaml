AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Architecting Solutions - Building a Proof of Concept for Data Analytics

Parameters:
  BucketName:
    Type: String
    Description: Name of the S3 bucket
    Default: sample-kinesis-data-495304
  Env:
    Type: String
    Description: Environment name
    Default: dev
  DeployIngestAPI:
    Type: String
    Description: Deploy optional ingest REST API stack
    Default: "yes"
    AllowedValues:
      - "yes"
      - "no"

Globals:
  Function:
    Environment:
      Variables:
        ENV_NAME: !Ref Env

Conditions:
  UseIngestAPIResources: !Equals [ !Ref DeployIngestAPI, "yes" ]

Resources:
  ####################################################################################################
  # Lambda Function
  ####################################################################################################
  
  TransormDataFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-TransormData
      Description: Transform data from Kinisis Firehose to S3
      CodeUri: functions/transform-data/
      Handler: app.lambda_handler
      Runtime: python3.9
      Timeout: 20
      MemorySize: 128
      Events:
        MyKinesisFirehoseEvent:
          Type: Kinesis
          Properties:
            Stream: !GetAtt streamConsumer.ConsumerARN
            BatchSize: 10
            StartingPosition: LATEST
  stream:
    Type: AWS::Kinesis::Stream
    Properties:
      ShardCount: 1
  
  streamConsumer:
    Type: AWS::Kinesis::StreamConsumer
    Properties:
      StreamARN: !GetAtt stream.Arn
      ConsumerName: lambda

  ####################################################################################################
  # S3 Bucket
  ####################################################################################################

  DataS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref BucketName
      AccessControl: Private
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      VersioningConfiguration:
        Status: Enabled
      
  ####################################################################################################
  # Bucket Policy
  ####################################################################################################

  DataS3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref DataS3Bucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: "StmtID"
            Effect: Allow
            Principal:
              Service: firehose.amazonaws.com
            Action:
              - s3:AbortMultipartUpload
              - s3:GetBucketLocation
              - s3:GetObject
              - s3:ListBucket
              - s3:ListBucketMultipartUploads
              - s3:PutObject
              - s3:PutObjectAcl
            Resource:
              - !Sub arn:aws:s3:::${DataS3Bucket}
              - !Sub arn:aws:s3:::${DataS3Bucket}/*
  
  ####################################################################################################
  # API Gateway
  ####################################################################################################

  RestAPIclickstreamIngest:
    Type: AWS::Serverless::Application
    Condition: UseIngestAPIResources
    Properties:
      Location: ./api-rest/api-rest-template.yaml
      Parameters:
        EventStream: !Ref stream
        EventStreamArn: !GetAtt stream.Arn
        StageName: !Ref Env
        ApiGatewayEndpointName: !Sub ${AWS::StackName}-ApiGatewayEndpoint
                