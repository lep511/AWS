AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: Lambda Powertools for Python Feature flags sample template

Parameters:
  DynamoDBTableName:
    Type: String
    Default: DemoAppConfigTable
    Description: Enter a name for the DynamoDB Table

Resources:
  AppConfigLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: Using AWS AppConfig with Powertools example
      Handler: lambda_function.lambda_handler
      Runtime: python3.12
      CodeUri: src/
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:BatchGetItem
                - dynamodb:BatchWriteItem
                - dynamodb:PutItem
                - dynamodb:UpdateItem
                - dynamodb:Query
                - dynamodb:Scan
                - dynamodb:GetItem
                - dynamodb:DeleteItem
                - dynamodb:DescribeTable
              Resource:
                - !Sub 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${DynamoDBTableName}'
            - Effect: Allow
              Action:
                - appconfig:GetConfiguration
              Resource:
                - Fn::Join:
                  - ''
                  - - 'arn:aws:appconfig:*:*:application/'
                    - Ref: FeatureStoreApp
                - Fn::Join:
                  - ''
                  - - 'arn:aws:appconfig:*:*:application/'
                    - Ref: FeatureStoreApp
                    - '/configurationprofile/'
                    - Ref: FeatureStoreConfigProfile
                - Fn::Join:
                  - ''
                  - - 'arn:aws:appconfig:*:*:application/'
                    - Ref: FeatureStoreApp
                    - '/environment/'
                    - Ref: FeatureStoreDevEnv
      Environment:
        Variables:
          DYNAMODB_TABLE: !Ref DynamoDBTable
      Layers:
        - !Sub arn:aws:lambda:${AWS::Region}:017000801446:layer:AWSLambdaPowertoolsPythonV2:76
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /
            Method: POST
  
  DynamoDBTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: !Ref DynamoDBTableName
      Tags:
        Department: Testing
        AppType: Serverless

  FeatureStoreApp:
    Type: AWS::AppConfig::Application
    Properties:
      Description: "AppConfig Application for feature toggles"
      Name: product-catalogue

  FeatureStoreDevEnv:
    Type: AWS::AppConfig::Environment
    Properties:
      ApplicationId: !Ref FeatureStoreApp
      Description: "Development Environment for the App Config Store"
      Name: dev

  FeatureStoreConfigProfile:
    Type: AWS::AppConfig::ConfigurationProfile
    Properties:
      ApplicationId: !Ref FeatureStoreApp
      Name: features
      LocationUri: "hosted"

  HostedConfigVersion:
    Type: AWS::AppConfig::HostedConfigurationVersion
    Properties:
      ApplicationId: !Ref FeatureStoreApp
      ConfigurationProfileId: !Ref FeatureStoreConfigProfile
      Description: 'A sample hosted configuration version'
      Content: |
        {
              "premium_features": {
                "default": false,
                "rules": {
                  "customer tier equals premium": {
                    "when_match": true,
                    "conditions": [
                      {
                        "action": "EQUALS",
                        "key": "tier",
                        "value": "premium"
                      }
                    ]
                  }
                }
              },
              "ten_percent_off_campaign": {
                "default": false
              }
          }
      ContentType: 'application/json'
  
  AppConfigLambdaDeploymentStrategy:
    Type: AWS::AppConfig::DeploymentStrategy
    Properties: 
      Name: product-catalogue
      DeploymentDurationInMinutes: 0
      FinalBakeTimeInMinutes: 0
      GrowthFactor: 100
      GrowthType: LINEAR
      ReplicateTo: NONE
 
  ConfigDeployment:
    Type: AWS::AppConfig::Deployment
    Properties:
      ApplicationId: !Ref FeatureStoreApp
      ConfigurationProfileId: !Ref FeatureStoreConfigProfile
      ConfigurationVersion: !Ref HostedConfigVersion
      DeploymentStrategyId: !Ref AppConfigLambdaDeploymentStrategy
      EnvironmentId: !Ref FeatureStoreDevEnv

Outputs:
  EndpointUrl:
    Description: "HTTP REST endpoint URL for the AppConfigLambdaFunction"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
  DynamoDBTable:
    Description: ARN of the DynamoDB table
    Value: !GetAtt DynamoDBTable.Arn